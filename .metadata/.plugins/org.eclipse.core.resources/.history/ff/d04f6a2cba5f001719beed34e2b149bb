package testclass;

import java.util.Random;
import java.util.concurrent.locks.ReentrantReadWriteLock;

public class ReadWriteLockTest {

	public static void main(String[] args) {
		final Queue3 q3 = new Queue3();
		for (int i = 0; i < 3; i++) {
			new Thread(new Runnable() {
				@Override
				public void run() {
					while (true) {
						q3.get();
					}
				}
			}).start();
			new Thread(new Runnable() {
				@Override
				public void run() {
					while (true) {
						q3.put(new Random().nextInt(10000));
					}
				}
			}).start();
		}
		
	}
	
}

class Queue3{
	private Object data = null;
	private ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();
	public void get(){
		rwl.readLock().lock();
		System.out.println(Thread.currentThread().getName() + "__read__" + data);
		rwl.readLock().unlock();
	}
	public void put(Object data){
		rwl.writeLock().lock();
		System.out.println(Thread.currentThread().getName() + "__read__" + data);
	}
}



